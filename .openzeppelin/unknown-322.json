{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xAE17B5B870fA5DD28Eb444D30B7862BfAd84882B",
    "txHash": "0xe9396748c60a5288916c529833d3792e0d1c078357813dea68ce558d4ea4e5a9"
  },
  "proxies": [
    {
      "address": "0x5d4dA1C5D567733B7552cC26612d9B3e3A0345FF",
      "txHash": "0x3af8cd057bf57d1cb014de81b32b44ca57ee16baa36d7f019bc30b92b101d173",
      "kind": "transparent"
    },
    {
      "address": "0xC2469d565A2DC77f4a496Ff5e3B25ED69Ea8AB6b",
      "txHash": "0x6d98348f47c8ff2979c3295a864c96e5b658b2d0c027bf71260950253bcd502e",
      "kind": "transparent"
    },
    {
      "address": "0x06b77ee016f8F2f6Ff7E361F5b7165ba16797CcE",
      "txHash": "0x5040d5faa556126eb41e08eba471c21499b0639b51249e4822549d86693ea8b5",
      "kind": "transparent"
    },
    {
      "address": "0x7887978a762AaEA3C02Ddc23f323fAA128745fa1",
      "txHash": "0x71b3c0c31dbeb4cabdcb9c34c025f1f78701a2154eb19fb1343c1d42744765c5",
      "kind": "transparent"
    },
    {
      "address": "0x33FdEd0aBab7c2980a613cCcAbA62bFB9f47F1aE",
      "txHash": "0x74585c6abddad9f1186a0eba5639eaecc9b843f77ae7e974b7a214fe974b5a92",
      "kind": "transparent"
    },
    {
      "address": "0x9809d9D94b0B3380db38b1e1a06047a2964e0041",
      "txHash": "0x0bac7378c9709c6fb30c0eccd1df04a366a0d3594c5bf04721e3b8714d968bee",
      "kind": "transparent"
    },
    {
      "address": "0x2CeFD15e2AF0918792598da46aF7bA2A46d480cF",
      "txHash": "0xde69eb288c9f620ca260b8c032ffe29330b4b828847b02e215ee59503a3270ea",
      "kind": "transparent"
    },
    {
      "address": "0xe6a6D0B0dA92476d428e6ea33bB013fE1394364f",
      "txHash": "0x810db5494573112f3d0ea46141d0808e3b2d7a7e1ffa76f1e80b103dedf1e7b0",
      "kind": "transparent"
    },
    {
      "address": "0xbc482CfD97f7083A4b18F93880c75b19Be5a1201",
      "txHash": "0x51baab558d8d84cf3d9b89dc868c01b5db53e7e94cb589585e49ca90d6c4f51c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "7ee222b74fc971d0f3db2ccfa9f9da381fcd5cd0de377b9497833a8aafa7dddb": {
      "address": "0xC8c6E4176C9a23e886A9BcCcb80ABCbc3C5c2D65",
      "txHash": "0x945d4db9f57f319399afc06407c8cefbf21a1e48bbb2200ff85cb58aa61dee4b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:118"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2340_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "label": "_PERMIT_TYPEHASH",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:99"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1168_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_struct(Checkpoint)1168_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:261"
          },
          {
            "label": "WKCS",
            "offset": 0,
            "slot": "404",
            "type": "t_contract(IWKCS)5007",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:34"
          },
          {
            "label": "VALIDATOR_CONTRACT",
            "offset": 0,
            "slot": "405",
            "type": "t_contract(IValidators)4962",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:37"
          },
          {
            "label": "_redeemingPool",
            "offset": 0,
            "slot": "406",
            "type": "t_struct(Pool)4570_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:66"
          },
          {
            "label": "_availablePool",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(AddressSet)4273_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:67"
          },
          {
            "label": "_disablingPool",
            "offset": 0,
            "slot": "411",
            "type": "t_struct(AddressSet)4273_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:69"
          },
          {
            "label": "activeValidators",
            "offset": 0,
            "slot": "413",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:73"
          },
          {
            "label": "_validators",
            "offset": 0,
            "slot": "414",
            "type": "t_mapping(t_address,t_struct(ValidatorInfo)7340_storage)",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:75"
          },
          {
            "label": "redemptionRequestBox",
            "offset": 0,
            "slot": "415",
            "type": "t_struct(RedemptionRequestBox)7390_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:115"
          },
          {
            "label": "_pendingRedemptions",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(PendingRedemptions)7398_storage))",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:134"
          },
          {
            "label": "accumulatedStakedKCSAmount",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:138"
          },
          {
            "label": "accumulatedRewardKCSAmount",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:140"
          },
          {
            "label": "numberOfHolders",
            "offset": 0,
            "slot": "423",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:142"
          },
          {
            "label": "timelastRedemptionFromKCCStaking",
            "offset": 0,
            "slot": "424",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:144"
          },
          {
            "label": "protocolParams",
            "offset": 0,
            "slot": "425",
            "type": "t_struct(ProtocolParameters)7434_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:161"
          },
          {
            "label": "kcsBalances",
            "offset": 0,
            "slot": "430",
            "type": "t_struct(KCSBalance)7447_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:175"
          },
          {
            "label": "_processRedemptionFacet",
            "offset": 0,
            "slot": "433",
            "type": "t_contract(IsKCSProcessRedemptionRequests)5016",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:179"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)1168_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IValidators)4962": {
            "label": "contract IValidators",
            "numberOfBytes": "20"
          },
          "t_contract(IWKCS)5007": {
            "label": "contract IWKCS",
            "numberOfBytes": "20"
          },
          "t_contract(IsKCSProcessRedemptionRequests)5016": {
            "label": "contract IsKCSProcessRedemptionRequests",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1168_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(PendingRedemptions)7398_storage))": {
            "label": "mapping(address => mapping(address => struct SKCSBase.PendingRedemptions))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2340_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingRedemptions)7398_storage)": {
            "label": "mapping(address => struct SKCSBase.PendingRedemptions)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ValidatorInfo)7340_storage)": {
            "label": "mapping(address => struct SKCSBase.ValidatorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RedemptionRequest)7372_storage)": {
            "label": "mapping(uint256 => struct SKCSBase.RedemptionRequest)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4273_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3972_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)1168_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2340_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(KCSBalance)7447_storage": {
            "label": "struct SKCSBase.KCSBalance",
            "members": [
              {
                "label": "buffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "debt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PendingRedemptions)7398_storage": {
            "label": "struct SKCSBase.PendingRedemptions",
            "members": [
              {
                "label": "pendingIDs",
                "type": "t_struct(UintSet)4430_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Pool)4570_storage": {
            "label": "struct FifoPool.Pool",
            "members": [
              {
                "label": "_buffer",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_nextWrite",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_nextRead",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProtocolParameters)7434_storage": {
            "label": "struct SKCSBase.ProtocolParameters",
            "members": [
              {
                "label": "protocolFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minStakingKCSAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumPendingRedemptionRequestPerUser",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minIntervalRedeemFromKCCStakingSingleValidator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sumOfWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RedemptionRequest)7372_storage": {
            "label": "struct SKCSBase.RedemptionRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountSKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "partiallyRedeemedKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "accAmountKCSBefore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RedemptionRequestBox)7390_storage": {
            "label": "struct SKCSBase.RedemptionRequestBox",
            "members": [
              {
                "label": "requests",
                "type": "t_mapping(t_uint256,t_struct(RedemptionRequest)7372_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "redeemingID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawingID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "accAmountKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3972_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)4430_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3972_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValidatorInfo)7340_storage": {
            "label": "struct SKCSBase.ValidatorInfo",
            "members": [
              {
                "label": "val",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualRedeeming",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "userRedeeming",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastRedemptionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "nextWithdrawingID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    },
    "bc5aa545a3304277a9455e4c545773a8b4967a9ef92f34bca806de7323842631": {
      "address": "0xEDBA386C67364084c5eCbb4C50422eEDCfB19374",
      "txHash": "0x435379714daff718f5837d8c43d87da8c578ca40090383b7fc69b9cc54cb6e7d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:118"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2340_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "label": "_PERMIT_TYPEHASH",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:99"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1168_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_struct(Checkpoint)1168_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:261"
          },
          {
            "label": "WKCS",
            "offset": 0,
            "slot": "404",
            "type": "t_contract(IWKCS)5007",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:34"
          },
          {
            "label": "VALIDATOR_CONTRACT",
            "offset": 0,
            "slot": "405",
            "type": "t_contract(IValidators)4962",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:37"
          },
          {
            "label": "_redeemingPool",
            "offset": 0,
            "slot": "406",
            "type": "t_struct(Pool)4570_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:66"
          },
          {
            "label": "_availablePool",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(AddressSet)4273_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:67"
          },
          {
            "label": "_disablingPool",
            "offset": 0,
            "slot": "411",
            "type": "t_struct(AddressSet)4273_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:69"
          },
          {
            "label": "activeValidators",
            "offset": 0,
            "slot": "413",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:73"
          },
          {
            "label": "_validators",
            "offset": 0,
            "slot": "414",
            "type": "t_mapping(t_address,t_struct(ValidatorInfo)7340_storage)",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:75"
          },
          {
            "label": "redemptionRequestBox",
            "offset": 0,
            "slot": "415",
            "type": "t_struct(RedemptionRequestBox)7390_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:115"
          },
          {
            "label": "_pendingRedemptions",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(PendingRedemptions)7398_storage))",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:134"
          },
          {
            "label": "accumulatedStakedKCSAmount",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:138"
          },
          {
            "label": "accumulatedRewardKCSAmount",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:140"
          },
          {
            "label": "numberOfHolders",
            "offset": 0,
            "slot": "423",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:142"
          },
          {
            "label": "timelastRedemptionFromKCCStaking",
            "offset": 0,
            "slot": "424",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:144"
          },
          {
            "label": "protocolParams",
            "offset": 0,
            "slot": "425",
            "type": "t_struct(ProtocolParameters)7434_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:161"
          },
          {
            "label": "kcsBalances",
            "offset": 0,
            "slot": "430",
            "type": "t_struct(KCSBalance)7447_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:175"
          },
          {
            "label": "_processRedemptionFacet",
            "offset": 0,
            "slot": "433",
            "type": "t_contract(IsKCSProcessRedemptionRequests)5016",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:179"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)1168_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IValidators)4962": {
            "label": "contract IValidators",
            "numberOfBytes": "20"
          },
          "t_contract(IWKCS)5007": {
            "label": "contract IWKCS",
            "numberOfBytes": "20"
          },
          "t_contract(IsKCSProcessRedemptionRequests)5016": {
            "label": "contract IsKCSProcessRedemptionRequests",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1168_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(PendingRedemptions)7398_storage))": {
            "label": "mapping(address => mapping(address => struct SKCSBase.PendingRedemptions))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2340_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingRedemptions)7398_storage)": {
            "label": "mapping(address => struct SKCSBase.PendingRedemptions)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ValidatorInfo)7340_storage)": {
            "label": "mapping(address => struct SKCSBase.ValidatorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RedemptionRequest)7372_storage)": {
            "label": "mapping(uint256 => struct SKCSBase.RedemptionRequest)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4273_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3972_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)1168_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2340_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(KCSBalance)7447_storage": {
            "label": "struct SKCSBase.KCSBalance",
            "members": [
              {
                "label": "buffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "debt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PendingRedemptions)7398_storage": {
            "label": "struct SKCSBase.PendingRedemptions",
            "members": [
              {
                "label": "pendingIDs",
                "type": "t_struct(UintSet)4430_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Pool)4570_storage": {
            "label": "struct FifoPool.Pool",
            "members": [
              {
                "label": "_buffer",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_nextWrite",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_nextRead",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProtocolParameters)7434_storage": {
            "label": "struct SKCSBase.ProtocolParameters",
            "members": [
              {
                "label": "protocolFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minStakingKCSAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumPendingRedemptionRequestPerUser",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minIntervalRedeemFromKCCStakingSingleValidator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sumOfWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RedemptionRequest)7372_storage": {
            "label": "struct SKCSBase.RedemptionRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountSKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "partiallyRedeemedKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "accAmountKCSBefore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RedemptionRequestBox)7390_storage": {
            "label": "struct SKCSBase.RedemptionRequestBox",
            "members": [
              {
                "label": "requests",
                "type": "t_mapping(t_uint256,t_struct(RedemptionRequest)7372_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "redeemingID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawingID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "accAmountKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3972_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)4430_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3972_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValidatorInfo)7340_storage": {
            "label": "struct SKCSBase.ValidatorInfo",
            "members": [
              {
                "label": "val",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualRedeeming",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "userRedeeming",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastRedemptionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "nextWithdrawingID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    },
    "3eb392572bbfcb82c047f2375049796d1a23381af7d2be461357e590b5394a09": {
      "address": "0x87E3D01B36b07794AB2c2B72C6FD958Fc98cCab3",
      "txHash": "0x7d8be22d4b57637e0c41106dddb61e051f79634c99e2cb828f42f8b6cb66992a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:118"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2340_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "label": "_PERMIT_TYPEHASH",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:99"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1168_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_struct(Checkpoint)1168_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:261"
          },
          {
            "label": "WKCS",
            "offset": 0,
            "slot": "404",
            "type": "t_contract(IWKCS)5007",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:34"
          },
          {
            "label": "VALIDATOR_CONTRACT",
            "offset": 0,
            "slot": "405",
            "type": "t_contract(IValidators)4962",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:37"
          },
          {
            "label": "_redeemingPool",
            "offset": 0,
            "slot": "406",
            "type": "t_struct(Pool)4570_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:66"
          },
          {
            "label": "_availablePool",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(AddressSet)4273_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:67"
          },
          {
            "label": "_disablingPool",
            "offset": 0,
            "slot": "411",
            "type": "t_struct(AddressSet)4273_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:69"
          },
          {
            "label": "activeValidators",
            "offset": 0,
            "slot": "413",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:73"
          },
          {
            "label": "_validators",
            "offset": 0,
            "slot": "414",
            "type": "t_mapping(t_address,t_struct(ValidatorInfo)7340_storage)",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:75"
          },
          {
            "label": "redemptionRequestBox",
            "offset": 0,
            "slot": "415",
            "type": "t_struct(RedemptionRequestBox)7390_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:115"
          },
          {
            "label": "_pendingRedemptions",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(PendingRedemptions)7398_storage))",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:134"
          },
          {
            "label": "accumulatedStakedKCSAmount",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:138"
          },
          {
            "label": "accumulatedRewardKCSAmount",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:140"
          },
          {
            "label": "numberOfHolders",
            "offset": 0,
            "slot": "423",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:142"
          },
          {
            "label": "timelastRedemptionFromKCCStaking",
            "offset": 0,
            "slot": "424",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:144"
          },
          {
            "label": "protocolParams",
            "offset": 0,
            "slot": "425",
            "type": "t_struct(ProtocolParameters)7434_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:161"
          },
          {
            "label": "kcsBalances",
            "offset": 0,
            "slot": "430",
            "type": "t_struct(KCSBalance)7447_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:175"
          },
          {
            "label": "_processRedemptionFacet",
            "offset": 0,
            "slot": "433",
            "type": "t_contract(IsKCSProcessRedemptionRequests)5016",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:179"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)1168_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IValidators)4962": {
            "label": "contract IValidators",
            "numberOfBytes": "20"
          },
          "t_contract(IWKCS)5007": {
            "label": "contract IWKCS",
            "numberOfBytes": "20"
          },
          "t_contract(IsKCSProcessRedemptionRequests)5016": {
            "label": "contract IsKCSProcessRedemptionRequests",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1168_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(PendingRedemptions)7398_storage))": {
            "label": "mapping(address => mapping(address => struct SKCSBase.PendingRedemptions))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2340_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingRedemptions)7398_storage)": {
            "label": "mapping(address => struct SKCSBase.PendingRedemptions)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ValidatorInfo)7340_storage)": {
            "label": "mapping(address => struct SKCSBase.ValidatorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RedemptionRequest)7372_storage)": {
            "label": "mapping(uint256 => struct SKCSBase.RedemptionRequest)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4273_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3972_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)1168_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2340_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(KCSBalance)7447_storage": {
            "label": "struct SKCSBase.KCSBalance",
            "members": [
              {
                "label": "buffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "debt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PendingRedemptions)7398_storage": {
            "label": "struct SKCSBase.PendingRedemptions",
            "members": [
              {
                "label": "pendingIDs",
                "type": "t_struct(UintSet)4430_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Pool)4570_storage": {
            "label": "struct FifoPool.Pool",
            "members": [
              {
                "label": "_buffer",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_nextWrite",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_nextRead",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProtocolParameters)7434_storage": {
            "label": "struct SKCSBase.ProtocolParameters",
            "members": [
              {
                "label": "protocolFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minStakingKCSAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumPendingRedemptionRequestPerUser",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minIntervalRedeemFromKCCStakingSingleValidator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sumOfWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RedemptionRequest)7372_storage": {
            "label": "struct SKCSBase.RedemptionRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountSKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "partiallyRedeemedKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "accAmountKCSBefore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RedemptionRequestBox)7390_storage": {
            "label": "struct SKCSBase.RedemptionRequestBox",
            "members": [
              {
                "label": "requests",
                "type": "t_mapping(t_uint256,t_struct(RedemptionRequest)7372_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "redeemingID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawingID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "accAmountKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3972_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)4430_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3972_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValidatorInfo)7340_storage": {
            "label": "struct SKCSBase.ValidatorInfo",
            "members": [
              {
                "label": "val",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualRedeeming",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "userRedeeming",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastRedemptionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "nextWithdrawingID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    },
    "c19a17b9f44c3b8a8e4ef980b4b324c7ad5c73b6ed938178bb05813ac966c9d9": {
      "address": "0x987D7633510071fF9a8E2aC7EdD566D227A9352C",
      "txHash": "0xe286c64753d0603173ab7b5d824f1ce40d45f66ea8e0d91627ad7ca25f86f55c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:118"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2340_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "label": "_PERMIT_TYPEHASH",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:99"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1168_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_struct(Checkpoint)1168_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:261"
          },
          {
            "label": "WKCS",
            "offset": 0,
            "slot": "404",
            "type": "t_contract(IWKCS)5007",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:34"
          },
          {
            "label": "VALIDATOR_CONTRACT",
            "offset": 0,
            "slot": "405",
            "type": "t_contract(IValidators)4962",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:37"
          },
          {
            "label": "_redeemingPool",
            "offset": 0,
            "slot": "406",
            "type": "t_struct(Pool)4570_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:66"
          },
          {
            "label": "_availablePool",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(AddressSet)4273_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:67"
          },
          {
            "label": "_disablingPool",
            "offset": 0,
            "slot": "411",
            "type": "t_struct(AddressSet)4273_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:69"
          },
          {
            "label": "activeValidators",
            "offset": 0,
            "slot": "413",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:73"
          },
          {
            "label": "_validators",
            "offset": 0,
            "slot": "414",
            "type": "t_mapping(t_address,t_struct(ValidatorInfo)7340_storage)",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:75"
          },
          {
            "label": "redemptionRequestBox",
            "offset": 0,
            "slot": "415",
            "type": "t_struct(RedemptionRequestBox)7390_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:115"
          },
          {
            "label": "_pendingRedemptions",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(PendingRedemptions)7398_storage))",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:134"
          },
          {
            "label": "accumulatedStakedKCSAmount",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:138"
          },
          {
            "label": "accumulatedRewardKCSAmount",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:140"
          },
          {
            "label": "numberOfHolders",
            "offset": 0,
            "slot": "423",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:142"
          },
          {
            "label": "timelastRedemptionFromKCCStaking",
            "offset": 0,
            "slot": "424",
            "type": "t_uint256",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:144"
          },
          {
            "label": "protocolParams",
            "offset": 0,
            "slot": "425",
            "type": "t_struct(ProtocolParameters)7434_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:161"
          },
          {
            "label": "kcsBalances",
            "offset": 0,
            "slot": "430",
            "type": "t_struct(KCSBalance)7447_storage",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:175"
          },
          {
            "label": "_processRedemptionFacet",
            "offset": 0,
            "slot": "433",
            "type": "t_contract(IsKCSProcessRedemptionRequests)5016",
            "contract": "SKCSBase",
            "src": "contracts/sKCSBase.sol:179"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)1168_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IValidators)4962": {
            "label": "contract IValidators",
            "numberOfBytes": "20"
          },
          "t_contract(IWKCS)5007": {
            "label": "contract IWKCS",
            "numberOfBytes": "20"
          },
          "t_contract(IsKCSProcessRedemptionRequests)5016": {
            "label": "contract IsKCSProcessRedemptionRequests",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1168_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(PendingRedemptions)7398_storage))": {
            "label": "mapping(address => mapping(address => struct SKCSBase.PendingRedemptions))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2340_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingRedemptions)7398_storage)": {
            "label": "mapping(address => struct SKCSBase.PendingRedemptions)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ValidatorInfo)7340_storage)": {
            "label": "mapping(address => struct SKCSBase.ValidatorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RedemptionRequest)7372_storage)": {
            "label": "mapping(uint256 => struct SKCSBase.RedemptionRequest)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4273_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3972_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)1168_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2340_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(KCSBalance)7447_storage": {
            "label": "struct SKCSBase.KCSBalance",
            "members": [
              {
                "label": "buffer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "debt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PendingRedemptions)7398_storage": {
            "label": "struct SKCSBase.PendingRedemptions",
            "members": [
              {
                "label": "pendingIDs",
                "type": "t_struct(UintSet)4430_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Pool)4570_storage": {
            "label": "struct FifoPool.Pool",
            "members": [
              {
                "label": "_buffer",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_nextWrite",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_nextRead",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProtocolParameters)7434_storage": {
            "label": "struct SKCSBase.ProtocolParameters",
            "members": [
              {
                "label": "protocolFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minStakingKCSAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumPendingRedemptionRequestPerUser",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minIntervalRedeemFromKCCStakingSingleValidator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sumOfWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RedemptionRequest)7372_storage": {
            "label": "struct SKCSBase.RedemptionRequest",
            "members": [
              {
                "label": "requester",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountSKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "partiallyRedeemedKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "accAmountKCSBefore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RedemptionRequestBox)7390_storage": {
            "label": "struct SKCSBase.RedemptionRequestBox",
            "members": [
              {
                "label": "requests",
                "type": "t_mapping(t_uint256,t_struct(RedemptionRequest)7372_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "redeemingID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawingID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "accAmountKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3972_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)4430_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3972_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValidatorInfo)7340_storage": {
            "label": "struct SKCSBase.ValidatorInfo",
            "members": [
              {
                "label": "val",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedKCS",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualRedeeming",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "userRedeeming",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastRedemptionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "nextWithdrawingID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    }
  }
}
